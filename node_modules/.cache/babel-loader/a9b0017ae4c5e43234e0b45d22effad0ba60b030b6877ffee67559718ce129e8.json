{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcTek\\\\Desktop\\\\OrmanBakanligiProje\\\\KURAKLIK\\\\KURAKLIK.UI\\\\src\\\\components\\\\Locations.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/Locations.js\nimport { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport wk from 'wellknown'; // wellknown.parse(wkt) -> GeoJSON geometry\n\n// FitBounds helper: bir array GeoJSON Feature'ı alıp haritayı ona göre ayarlar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FitBounds({\n  features\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (!features || features.length === 0) return;\n\n    // create leaflet layers and compute union bounds\n    const layers = features.map(f => L.geoJSON(f));\n    const group = L.featureGroup(layers);\n    try {\n      const bounds = group.getBounds();\n      if (bounds.isValid()) {\n        map.fitBounds(bounds, {\n          padding: [20, 20]\n        });\n      }\n    } catch (e) {\n      // hata olsa da kırma\n      console.warn('FitBounds hata:', e);\n    }\n  }, [features, map]);\n  return null;\n}\n_s(FitBounds, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = FitBounds;\nexport default function Locations() {\n  _s2();\n  const [items, setItems] = useState([]); // raw rows (id, name, extent_wkt, ...)\n  const [features, setFeatures] = useState([]); // GeoJSON Feature array\n\n  useEffect(() => {\n    fetch('/locations') //\n    .then(res => res.json()).then(data => {\n      // data: [{ id, name, extent_wkt, ... }, ...]\n      setItems(data);\n\n      // WKT -> GeoJSON Feature dönüştür\n      const feats = data.map(row => {\n        if (!row.extent_wkt) return null;\n        const geom = wk.parse(row.extent_wkt); // returns GeoJSON geometry (or null)\n        if (!geom) return null;\n        return {\n          type: 'Feature',\n          geometry: geom,\n          properties: {\n            id: row.id,\n            name: row.name\n          }\n        };\n      }).filter(Boolean);\n      setFeatures(feats);\n      console.log('feats', feats);\n    }).catch(err => {\n      console.error('Lokasyon çekme hatası:', err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: 12\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '35%',\n        maxHeight: '80vh',\n        overflow: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Locations (DB)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(i => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: i.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              whiteSpace: 'pre-wrap'\n            },\n            children: i.extent_wkt ? i.extent_wkt.slice(0, 200) + (i.extent_wkt.length > 200 ? '...' : '') : 'WKT yok'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, i.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [38.5, 28.0],\n        zoom: 7,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 OpenStreetMap contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), features.map((f, idx) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n          data: f,\n          onEachFeature: (feature, layer) => {\n            var _feature$properties$n, _feature$properties;\n            const name = (_feature$properties$n = (_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.name) !== null && _feature$properties$n !== void 0 ? _feature$properties$n : 'No name';\n            layer.bindPopup(`<strong>${name}</strong>`);\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(FitBounds, {\n          features: features\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s2(Locations, \"CnfuQiaDnYSGkT7qiBc3rkKFBB4=\");\n_c2 = Locations;\nvar _c, _c2;\n$RefreshReg$(_c, \"FitBounds\");\n$RefreshReg$(_c2, \"Locations\");","map":{"version":3,"names":["useEffect","useState","MapContainer","TileLayer","GeoJSON","useMap","L","wk","jsxDEV","_jsxDEV","FitBounds","features","_s","map","length","layers","f","geoJSON","group","featureGroup","bounds","getBounds","isValid","fitBounds","padding","e","console","warn","_c","Locations","_s2","items","setItems","setFeatures","fetch","then","res","json","data","feats","row","extent_wkt","geom","parse","type","geometry","properties","id","name","filter","Boolean","log","catch","err","error","style","display","gap","children","width","maxHeight","overflow","fileName","_jsxFileName","lineNumber","columnNumber","i","fontSize","whiteSpace","slice","flex","height","center","zoom","attribution","url","idx","onEachFeature","feature","layer","_feature$properties$n","_feature$properties","bindPopup","_c2","$RefreshReg$"],"sources":["C:/Users/mcTek/Desktop/OrmanBakanligiProje/KURAKLIK/KURAKLIK.UI/src/components/Locations.js"],"sourcesContent":["// src/components/Locations.js\r\nimport { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, GeoJSON, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport wk from 'wellknown'; // wellknown.parse(wkt) -> GeoJSON geometry\r\n\r\n// FitBounds helper: bir array GeoJSON Feature'ı alıp haritayı ona göre ayarlar\r\nfunction FitBounds({ features }) {\r\n    const map = useMap();\r\n\r\n    useEffect(() => {\r\n        if (!features || features.length === 0) return;\r\n\r\n        // create leaflet layers and compute union bounds\r\n        const layers = features.map(f => L.geoJSON(f));\r\n        const group = L.featureGroup(layers);\r\n        try {\r\n            const bounds = group.getBounds();\r\n            if (bounds.isValid()) {\r\n                map.fitBounds(bounds, { padding: [20, 20] });\r\n            }\r\n        } catch (e) {\r\n            // hata olsa da kırma\r\n            console.warn('FitBounds hata:', e);\r\n        }\r\n    }, [features, map]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default function Locations() {\r\n    const [items, setItems] = useState([]);       // raw rows (id, name, extent_wkt, ...)\r\n    const [features, setFeatures] = useState([]); // GeoJSON Feature array\r\n\r\n    useEffect(() => {\r\n        fetch('/locations') //\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // data: [{ id, name, extent_wkt, ... }, ...]\r\n                setItems(data);\r\n\r\n                // WKT -> GeoJSON Feature dönüştür\r\n                const feats = data\r\n                    .map(row => {\r\n                        if (!row.extent_wkt) return null;\r\n                        const geom = wk.parse(row.extent_wkt); // returns GeoJSON geometry (or null)\r\n                        if (!geom) return null;\r\n                        return {\r\n                            type: 'Feature',\r\n                            geometry: geom,\r\n                            properties: {\r\n                                id: row.id,\r\n                                name: row.name\r\n                            }\r\n                        };\r\n                    })\r\n                    .filter(Boolean);\r\n\r\n                setFeatures(feats);\r\n                console.log('feats',feats)\r\n            })\r\n            .catch(err => {\r\n                console.error('Lokasyon çekme hatası:', err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', gap: 12 }}>\r\n            <div style={{ width: '35%', maxHeight: '80vh', overflow: 'auto' }}>\r\n                <h3>Locations (DB)</h3>\r\n                <ul>\r\n                    {items.map(i => (\r\n                        <li key={i.id}>\r\n                            <strong>{i.name}</strong>\r\n                            <div style={{ fontSize: 12, whiteSpace: 'pre-wrap' }}>\r\n                                {i.extent_wkt ? i.extent_wkt.slice(0, 200) + (i.extent_wkt.length > 200 ? '...' : '') : 'WKT yok'}\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div style={{ flex: 1, height: '80vh' }}>\r\n                <MapContainer center={[38.5, 28.0]} zoom={7} style={{ height: '100%', width: '100%' }}>\r\n                    <TileLayer\r\n                        attribution='&copy; OpenStreetMap contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n\r\n                    {/* Her feature için GeoJSON olustur ve popup ekle */}\r\n                    {features.map((f, idx) => (\r\n                        <GeoJSON\r\n                            key={idx}\r\n                            data={f}\r\n                            onEachFeature={(feature, layer) => {\r\n                                const name = feature.properties?.name ?? 'No name';\r\n                                layer.bindPopup(`<strong>${name}</strong>`);\r\n                            }}\r\n                        />\r\n                    ))}\r\n\r\n                    <FitBounds features={features} />\r\n                </MapContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}